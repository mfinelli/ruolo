#!/usr/bin/env ruby
# frozen_string_literal: true

require 'logger'
log = Logger.new($stdout)

require 'sequel'
DB = Sequel.connect('postgres://ruolo@localhost/ruolo')

DB.loggers << log

def reset_db!
  tables = DB.tables.map(&:to_s).map { |t| %("#{t}") }.join(',')
  DB.run "DROP TABLE #{tables};" unless tables.empty?
end

def migrate_db!
  Sequel.extension :migration
  Sequel::Migrator.run(DB, File.expand_path(File.join(File.dirname(__FILE__), '..', 'spec', 'fixtures', 'migrations')))
end

begin
  require 'ruolo'
rescue Sequel::DatabaseError
  migrate_db!
  retry
end

Ruolo.configure do |config|
  config.connection = DB
end

class User < Sequel::Model
  include Ruolo::Models::User
  plugin :timestamps, update_on_create: true
  many_to_many :roles, join_table: :users_roles, class: 'Ruolo::Models::Role'
end

require 'pry'
Pry.start
